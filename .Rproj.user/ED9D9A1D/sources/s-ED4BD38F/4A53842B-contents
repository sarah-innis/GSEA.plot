---
output:
  pdf_document: default
  html_document:
    df_print: paged
---

#GSEA.plot
####Civelek Lab University of Virginia
#####Sarah Innis, Warren Anderson, Mete Civelek
#####March 6,2019
This vignette gives an introduction into the GSEA.plot package. This package builds off of the Gene Set Enrichment computational analysis published by the Broad Institute specifically their R code for outputting the results. This package uses the enrichment data to create plots that are easer to understand and modify. 

This package requires three data files which can come from any folder that the path must be clearly defined. It will output two summary results files and a pdf of all of the enrichment plots to the working directory specified in wd_new. Within that directory there should be a results folder named with the same string as the doc.string input, this is where the individual gene set results will go.

```{r setup, include=FALSE}

knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

**Load Data and Package**

```{r echo=TRUE, message=FALSE,warning=FALSE, error=FALSE}
library(devtools)
#install_github("Sarah-innis/GSEA.plot")
library(GSEA.plot)

# data locations
code.folder="C:/Users/Student/Documents/CivelekLab/GSEA.plot/R/"
datasets.folder="C:/Users/Student/Documents/CivelekLab/GSEA.plot/data/"
genesets.folder="C:/Users/Student/Documents/CivelekLab/GSEA.plot/data/"

#file for outputs-- must contain Leukemia_hall folder inside it
wd_new="C:/Users/Student/Documents/CivelekLab/GSEA_edit3/"

```

**GSEA Analysis**

The GSEA analysis takes three files. The expression data in gct format. The phenotype for each sample in cls format and a gene set database in gmt format. Other parameters include the folder locations of these files, thresholds for analysis of the significance of the data, and options to control how the graphs look. 


```{r results="hide"}
 pp= GSEAplots(wd_new=wd_new, datasets.folder=datasets.folder,input.ds.name="Leukemia.gct",
               input.cls.name="Leukemia.cls", genesets.folder=genesets.folder,
               gene.set.input="h.all.v6.1.symbols.gmt", code.folder=code.folder,
               doc.string="Leukemia_hall", nperm=1000,nom.p.val.threshold=-1,fdr.q.val.threshold = 0.25,
               bar_percent=0.1, gap_percent=0.1, under_percent=0.1,upper_percent=0.1,color_line="black",
               color_tick="black")

```



## Function outputs

**Plots**

This is the enrichment plot given from the first geneset.

```{r fig.width=3,fig.height=3}
pp$plots[[1]]

```

Use the function plot.ES to save a pdf containing the enrichment plots for every set in the gene set database.
```{r results='hide'}
plot.ES(list.of.plots=pp$plots,plotname="Vignette_example")
```

**Gene.Set.Reference.Matrix and Gene.set.leading**

These are the gene symbols contained in the first gene set.
```{r}
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
```
These are the leading gene symbols for the first gene set.
```{r}
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.leading[[1]])

```

**Reports**

One report is generated for each phenotype. The table shows all of the information available in the report file except for the source for the geneset which is ommitted for easier viewing. 
```{r include=FALSE}
library(knitr)
library(kableExtra)
```

```{r}
kable(pp$report1[1,-3], format="latex", booktabs=TRUE) %>% 
  kable_styling(latex_options="scale_down")
```



**Enrichment Scores**

The enrichment score ouput allows you to access the data used to generate the plots so that you might create your own.For example if you wanted to quickly compare the enrichment scores between two gene sets. 
```{r fig.width=4,fig.height=4}
data1=pp$ES[[2]]
kable(head(data1),format="latex",booktabs=TRUE)


enrich_ind=which(data1$EStag==1)
d=data.frame(x=enrich_ind, y=matrix(min(data1$RES)-0.12,length(enrich_ind),1), vx=matrix(0,length(enrich_ind),1), vy=matrix(0.04,length(enrich_ind),1))
p <- ggplot(data1, aes(index,RES))+geom_line(col="black")
p <- p+geom_segment(data=d, mapping=aes(x=x, y=y, xend=x+vx, yend=y+vy),col="black")
p <- p+theme_classic()
print(p)

```




